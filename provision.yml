---
- name: provision SINGLE ubuntu sever 20.04 

  # Specify the hosts you want to target
  hosts: all 
  ignore_errors: no  
  #gather_facts: true
  #gather_subset: network,virtualhist
  no_log: False 
 
  # Specify the user you want to connect to the server.
  # With a new installation, you will connect with `root`. If you want to
  # re-run this playbook at a later date, you should change `remote_user` to
  # the user you specified under `vars/username` below and uncomment the
  # `become: true` line. You should then run the playbook using the
  # `--ask-become-pass` flag, like so:
  # `ansible-playbook -k provision.yml --ask-become-pass`.
  remote_user: root 
  become: yes
 
  vars:
    HOST_COUNT: "{{ ansible_play_hosts | length }}"
    ssh_port: 2277
    #ansible_remote_tmp: /tmp
    user_name: user 
   # RUN THIS COMMAND TO GET STARTED....
   # "mkpasswd --method=sha-512"
   # Check the README for information about creating a hashed password
    public_key: ~/.ssh/id_ed25519.pub

  pre_tasks:
    
    - raw: sudo apt-get update -y
      register: system_output

    - raw: sudo apt-get -y install python3 acl 
      register: py_3_output

    - debug: 
        var=system_output.stdout_lines

    - debug: 
        var=py_3_output.stdout_lines

    - name: get Python version
      shell: python3 --version 2>&1
      register: py_3_output

    - debug: 
        var=py_3_output.stdout_lines
        
  roles:
   - { role: 'user', become: yes, tags: 'user' }
   - { role: 'directory', become: yes, tags: 'directory'}
   - { role: 'packages', become: yes, tags: 'packages' }
   - { role: 'suricata', become: yes, tags: 'suricata' }
   - { role: 'locale', become: yes, tags: 'locale' }
   - { role: 'unattended-upgrades', become: yes, tags: 'unattended-upgrades' }
   - { role: 'dpkg-overide', become: yes, tags: 'dpkg-overide' }
   - { role: 'sharedmem', become: yes, tags: 'sharedmem' }
   - { role: 'tty', become: yes, tags: 'tty' }
   - { role: 'irqbalance', become: yes, tags: 'irqbalance' }
   - { role: 'set-limits', become: yes, tags: 'set-limits' }
   - { role: 'swap', become: yes, tags: 'swap' }
   - { role: 'secure-cron', become: yes, tags: 'secure-cron' }
   - { role: 'clamav', become: yes, tags: 'clamav' }
   - { role: 'rootkit', become: yes, tags: 'rootkit' }
   - { role: 'common', become: yes, tags: 'common' }
   - { role: 'logs', become: yes, tags: 'logs' }
   - { role: 'scripts', become: yes, tags: 'scripts' }
  # - { role: 'ssh-upload', become: yes, tags: 'ssh-upload' }
   - { role: 'ownership', become: yes, tags: 'ownership' }
   - { role: 'remove-pckgs', become: yes, tags: 'remove-pckgs' }
   - { role: 'firewall', become: yes, tags: 'firewall' }
   - { role: 'sysctl', become: yes, tags: 'sysctl' }
   - { role: 'ssh', become: yes, tags: 'ssh' }
   - { role: 'lynis', become: yes, tags: 'lynis' }
   - { role: 'download', become: yes, tags: 'download' }
   - { role: 'Azure', become: yes, tags: 'Azure' }
   - { role: 'tmp', become: yes, tags: 'tmp' }
  

    





 

 

   


   
   

      


   

   

   
   
   
    
 
